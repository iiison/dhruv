{"version":3,"sources":["redux/modules/test.js","redux/utils/reduxUtils.js","redux/modules/home/home.js","configs/store.js","screens/components/input/input.js","screens/home/Home.jsx","screens/Editor/Editor.jsx","Wrapper.js","configs/routes.jsx","serviceWorker.js","index.js","screens/home/images/monk.png"],"names":["initialState","isFetching","isAuthed","error","test","state","action","options","GET_USER","GET_USER_FAILURE","GET_USER_SUCCESS","userInfo","response","type","makeActionByType","actionName","success","failure","defaultState","home","additionalActions","shouldMergeDefaultStates","mergedState","moreActions","makeReducer","query","SET_QUERY_RESULTS","files","setQueryResults","store","createStore","combineReducers","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","func","Input","event","returnData","placeholder","useState","inputValue","setInputValue","shouldShowButton","toggleButton","isProcessing","setProcessing","useEffect","className","disabled","value","onChange","evt","target","onKeyDown","keyCode","onClick","formatFileNames","push","file","filteredFiles","pathname","setSelectedFile","isDirectory","fileExtensionElementMap","js","class","css","tpl","html","jsx","default","directory","map","fileName","index","iconElement","extension","slice","lastIndexOf","handleClick","renderFile","App","setFiles","message","setMessage","dispatch","useDispatch","location","useLocation","history","useHistory","commands","annyang","trigger","socket","emit","operation","replace","toLowerCase","fileIndex","path","on","data","length","console","log","filteredDirs","dirName","addCommands","setupAnnyang","src","monk","alt","Editor","pr","Prism","renderedContent","setRenderedContent","selectedFilePath","useSelector","useParams","line","name","fileContent","setupPage","highlightAll","tabSize","width","height","fontSize","theme","mode","enableLiveAutocompletion","editorProps","$blockScrolling","code","Wrapper","children","go","removeCommands","Object","keys","SetupAnnyang","routes","exact","component","Home","Boolean","hostname","match","io","setLanguage","start","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.40093c9c.chunk.js","sourcesContent":["// import { get } from '$UTILS/requestHandler'\n// import errorTypeDetailMap from '$CONFIG/errorTypeDetailMap'\n\nexport const GET_USER = 'GET_USER'\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE'\n\nexport function getUser() {\n  return {\n    type : GET_USER\n  }\n}\n\nexport function getUserFailure(error = '') {\n  return {\n    type  : GET_USER_FAILURE,\n    error\n  }\n}\n\nexport function getUserSuccess(response) {\n  return {\n    type : GET_USER_SUCCESS,\n    response\n  }\n}\n\n// Async Action Creators Starts\nexport function fetchUser() {\n  return async (dispatch) => {\n    dispatch(getUser())\n\n    try {\n      // const response = await get({\n      //   path    : 'some/path',\n      //   payload : {},\n      //   dispatch\n      // })\n\n      const body = await fetch('https://backendapi.turing.com/departments')\n      const response = await body.json()\n\n      dispatch(getUserSuccess(response))\n    } catch (error){\n      dispatch(getUserFailure(error.message))\n\n      throw error.message\n    }\n  }\n}\n// Async Action Creators Ends\n\nexport const initialState = {\n  isFetching : false,\n  isAuthed   : false,\n  error      : ''\n}\n\nexport default function test(state = initialState, action) {\n  const options = {\n    GET_USER : () => ({\n      ...state,\n      isFetching : true\n    }),\n    GET_USER_FAILURE : () => ({\n      ...state,\n      isFetching : false,\n      error      : action.error\n    }),\n    GET_USER_SUCCESS : () => ({\n      ...state,\n      isFetching : false,\n      error      : '',\n      userInfo   : action.response\n    })\n  }\n\n  return action.type && options[action.type] ? options[action.type]() : state\n}\n\n","// import errorTypeDetailMap from '$CONFIG/errorTypeDetailMap'\nconst errorTypeDetailMap = {}\n\nfunction makeActionByType(actionName, type) {\n  const typeValueMap = {\n    success : '_SUCCESS',\n    failure : '_FAILURE'\n  }\n\n  return {\n    type : `${actionName}${typeValueMap[type]}`\n  }\n}\n\nexport function makeActions(actionName) {\n  return {\n    defaultAction(options = {}) {\n      return {\n        type : actionName,\n        ...options\n      }\n    },\n    successAction(response) {\n      return {\n        ...makeActionByType(actionName, 'success'),\n        response\n      }\n    },\n    failureAction(error = errorTypeDetailMap.generic) {\n      return {\n        ...makeActionByType(actionName, 'failure'),\n        error\n      }\n    }\n  }\n}\n\nconst defaultState = {\n  isFetching : true,\n  error      : ''\n}\n\nexport function makeReducer({\n  actionName,\n  additionalActions,\n  initialState = defaultState,\n  shouldMergeDefaultStates = false\n}) {\n  const mergedState = shouldMergeDefaultStates \n    ? {\n      ...defaultState,\n      ...initialState\n    } : initialState\n\n  return function (state = mergedState, action) {\n    const moreActions = additionalActions ? additionalActions(state, action) : {}\n    const options = {\n      [actionName] : () => ({\n        ...state,\n        isFetching : true\n      }),\n      [makeActionByType(actionName, 'failure').type] : () => ({\n        ...state,\n        isFetching : false,\n        error      : action.error\n      }),\n      [makeActionByType(actionName, 'success').type] : () => ({\n        ...state,\n        error      : '',\n        isFetching : false,\n        response   : action.response\n      }),\n      ...moreActions\n    }\n\n    return action.type && options[action.type] ? options[action.type]() : state\n  }\n}\n\n","import { makeReducer } from '../../utils/reduxUtils'\n\nconst home = makeReducer({\n  actionName : 'file',\n  shouldMergeDefaultStates : true,\n  initialState : {\n    query : ''\n  },\n  additionalActions(state, action) {\n    return {\n      SET_QUERY_RESULTS : () => ({\n        ...state,\n        files : action.files\n      })\n    }\n  }\n})\n\nconst SET_QUERY_RESULTS = 'SET_QUERY_RESULTS'\n\nexport function setQueryResults (files = '') {\n  return {\n    type : SET_QUERY_RESULTS,\n    files\n  }\n}\n\nexport default home\n\n","import thunk from 'redux-thunk'\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose\n} from 'redux'\nimport * as reducers from '../redux'\n\nconst store   = createStore(\n  combineReducers({\n    ...reducers\n  }),\n  compose(applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (func) => func)\n)\n\nexport default store\n\n","import React, { useState, useEffect } from 'react'\nimport './styles.css'\n\nfunction Input({ event, returnData = {}, placeholder = 'Enter value' }) {\n  const [inputValue, setInputValue] = useState('')\n  const [shouldShowButton, toggleButton] = useState(false)\n  const [isProcessing, setProcessing] = useState(false)\n\n  useEffect(() => toggleButton(inputValue !== ''), [inputValue])\n\n  return (\n    <div className='input-wrapper'>\n      <input\n        className='input'\n        type=\"text\"\n        disabled={isProcessing}\n        placeholder={placeholder}\n        value={inputValue}\n        onChange={(evt) => {\n          setInputValue(evt.target.value)\n        }}\n        onKeyDown={(evt) => {\n          const { keyCode, target : { value } } = evt\n\n          if (value && keyCode === 13) {\n            event({ value, ...returnData })\n            setProcessing(true)\n          }\n        }}\n      />\n      <button\n        className={`input-button ${shouldShowButton && !isProcessing && 'visible'}`}\n        onClick={() => {\n          event({ value : inputValue, ...returnData })\n          setProcessing(true)\n        }}\n      >ok</button>\n    </div>\n  )\n}\n\nexport default Input\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch }                from 'react-redux';\nimport { useLocation, useHistory }    from 'react-router-dom'\nimport annyang                        from 'annyang'\n\nimport { socket } from '../../index'\nimport { setQueryResults } from '../../redux/modules/home/home'\nimport Input from '../components/input/input'\n\n// react-simple-code-editor Deps\n// import Editor                         from 'react-simple-code-editor';\n// import { highlight, languages }       from 'prismjs/components/prism-core'\n\nimport monk from './images/monk.png'\nimport './App.css';\n\n// const socket = io();\n\nfunction renderFile({ index, file, push }) {\n  push(`/explore/${file}/${index}`)\n}\n\nfunction formatFileNames({ \n  push,\n  file,\n  event,\n  pathname,\n  filteredFiles, \n  setSelectedFile,\n  isDirectory = false\n}) {\n  const fileExtensionElementMap = {\n    js        : <i class='fab fa-js-square'></i>,\n    css       : <i class='fab fa-css3-alt'></i>,\n    tpl       : <i class='fab fa-html5'></i>,\n    html      : <i class='fab fa-html5'></i>,\n    jsx       : <i class='fab fa-react'></i>,\n    default   : <i class='fas fa-code'></i>,\n    directory : <i class=\"fas fa-folder-open\"></i>\n  }\n  return filteredFiles.map((fileName, index) => {\n    const extension = fileName.slice(fileName.lastIndexOf('.') + 1)\n    let iconElement\n\n    if (!isDirectory) {\n      iconElement = fileExtensionElementMap[extension] || fileExtensionElementMap.default\n    } else {\n      iconElement = fileExtensionElementMap.directory\n    }\n\n    const handleClick = !isDirectory ? () => renderFile({ index, file, push }) : null\n\n    return (\n      <p onClick={handleClick} className='file-item'>\n        {iconElement} <span className='file-name'>{fileName}</span>\n        {isDirectory && <Input placeholder='Directory Name' returnData={{fileName}} event={event} />}\n      </p>\n    )\n  })\n}\n\nfunction setupAnnyang({\n  history,\n  location,\n  dispatch,\n  setFiles,\n  setMessage,\n  setSelectedFile\n}) {\n  const commands = {\n    'hello' : () => {\n      annyang.trigger('go home')\n      setMessage('Hey Man! Let\\'s do this thing!');\n    },\n\n    'search for file *file' : (file) => {\n      annyang.trigger('go home')\n      setMessage(`open ${file}`)\n\n      socket.emit('openFile', {\n        operation : 'open',\n        file : `${file.replace(/\\s/g, '')}`.toLowerCase()\n      });\n    },\n\n    'select :fileIndex file' : (fileIndex) => {\n      setMessage(`Selected ${fileIndex}`)\n\n      // socket.emit('openFile', {\n      //   operation : 'open',\n      //   file : `${file.replace(/\\s/g, '')}`.toLowerCase()\n      // })\n    },\n\n    'make new directory at *path' : (path) => {\n      socket.emit('make directory', {\n        path      : `${path.replace(/\\s/g, '')}`.toLowerCase(),\n        operation : 'list directory'\n      })\n    }\n  }\n\n  socket.on('openFile', (data = {}) => {\n    const { filteredFiles, file } = data\n    const { push } = history\n    const { pathname } = location\n\n    if (filteredFiles && filteredFiles.length) {\n      setMessage(`I found ${filteredFiles.length} files:`)\n      setFiles(formatFileNames({ filteredFiles, setSelectedFile, push, pathname, file }))\n      dispatch(setQueryResults(filteredFiles))\n    } else {\n      setMessage(`I couldn't find any file with this name: ${file}.`)\n      setFiles([])\n    }\n\n    console.log(data)\n  })\n\n  socket.on('make directory', (data = {}) => {\n    annyang.trigger('go home')\n\n    const { filteredDirs, path } = data\n    const { push } = history\n    const { pathname } = location\n\n    if (filteredDirs && filteredDirs.length) {\n      setMessage(`I found ${filteredDirs.length} directories:`)\n      setFiles(formatFileNames({\n        push,\n        pathname,\n        setSelectedFile,\n        file          : path,\n        isDirectory   : true,\n        filteredFiles : filteredDirs,\n        event         : ({ value, fileName }) => {\n          socket.emit('make directory', {\n            operation : 'create directory',\n            dirName   : `${fileName}${value}`\n          });\n          setMessage(`Making new directory '${value}'...`)\n        }\n      }))\n      dispatch(setQueryResults(filteredDirs))\n    } else {\n      setMessage(`I couldn't find any directories with this name: ${path}.`)\n      setFiles([])\n    }\n  })\n\n  annyang.addCommands(commands)\n}\n\nfunction App() {\n  const [ files, setFiles ] = useState([])\n  const [ message, setMessage ] = useState('Ask something to Rudra...')\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => setupAnnyang({\n    setMessage,\n    setFiles,\n    dispatch,\n    location,\n    history\n  }), [])\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img className='monk App-logo' src={monk} alt='logo' />\n        <p>\n          {message}\n          <div className='t-left'>\n            {files.length > 0 && files}\n          </div>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React, { useState, useEffect } from 'react';\nimport Prism                          from 'prismjs'\nimport { useSelector }                from 'react-redux';\nimport { useParams }                  from 'react-router-dom'\nimport annyang                     from 'annyang'\n\nimport { socket } from '../../index'\n\n// react-ace deps\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nimport monk from '../home/images/monk.png'\nimport './styles.css'\n\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport '@fortawesome/fontawesome-free/css/solid.min.css'\n\nfunction setupPage({\n  setRenderedContent,\n  selectedFilePath\n}){\n  const commands = {\n    'add variable at line number :line with name *name' : (line, name) => {\n      socket.emit('addNewItem', {\n        line,\n        name,\n        type : 'variable',\n        file : selectedFilePath\n      })\n    }\n  }\n\n  socket.on('renderFile', (data = {}) => {\n    const { fileContent } = data\n\n    setRenderedContent(fileContent)\n\n    // if (filteredFiles && filteredFiles.length) {\n    //   setMessage(`I found ${filteredFiles.length} files:`)\n    //   setFiles(formatFileNames({ filteredFiles, setSelectedFile }))\n    // } else {\n    //   setMessage(`I couldn't find any file with this name: ${file}.`)\n    //   setFiles([])\n    // }\n  })\n\n  socket.on('addNewVariable', (data = {}) => {\n    const { fileContent } = data\n\n    setRenderedContent(fileContent)\n  })\n\n  annyang.addCommands(commands)\n}\n\nexport default function Editor() {\n  window.pr = Prism\n  const [ renderedContent, setRenderedContent ] = useState('')\n  const { files } = useSelector(state => state.home)\n  const { index } = useParams()\n\n  const selectedFilePath = files[index]\n\n  useEffect(() => setupPage({\n    setRenderedContent,\n    selectedFilePath\n  }), [])\n\n  useEffect(() => socket.emit('renderFile', {\n    operation : 'render',\n    fileName : selectedFilePath\n  }), [])\n\n  useEffect(() => () => Prism.highlightAll(), [renderedContent])\n\n  return (\n    <div className='editor-cont'>\n      <header className='editor-header'>\n        <img className='small-monk' src={monk} alt='logo' />\n        <h1>Rudra</h1>\n      </header>\n      <div className='editor'>\n        {\n          renderedContent && (\n            <AceEditor\n              tabSize={2}\n              width='auto'\n              height='calc(100vh - 62px)'\n              fontSize={14}\n              theme='monokai'\n              mode='javascript'\n              name={selectedFilePath}\n              value={renderedContent}\n              enableLiveAutocompletion={true}\n              editorProps={{ $blockScrolling: true }}\n              onChange={code => setRenderedContent(code)}\n            />\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect } from 'react';\nimport { useLocation, useHistory }    from 'react-router-dom'\nimport annyang                        from 'annyang'\n\nfunction SetupAnnyang({ history, location }) {\n  const commands = {\n    'go home' : () => {\n      debugger\n      if (location.pathname !== '/'){\n        history.go('/');\n      }\n    },\n\n    'search for files *file' : (file) => {\n      if (location.pathname !== '/'){\n        history.go('/');\n      }\n    },\n\n    'make new directory atx *path' : (path) => {\n      console.log('*****************************')\n      console.log(path)\n      console.log('*****************************')\n    }\n  }\n\n  annyang.removeCommands(Object.keys(commands))\n  annyang.addCommands(commands)\n}\n\nfunction Wrapper({ children }) {\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => SetupAnnyang({ history, location }), [location])\n\n  return (\n    <div>\n      {children}\n    </div>\n  )\n}\n\nexport default Wrapper;\n\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\n// import Test from '$COMPONENTS/test'\n// import Test2 from '$COMPONENTS/Test2'\n\nimport Home from '../screens/home/Home'\nimport Editor from '../screens/Editor/Editor'\nimport Wrapper from '../Wrapper'\n\n// import {\n//   Home,\n//   RepoDetails\n// } from '$CONTAINERS'\n\nconst routes = () => (\n  <div className='app grid'>\n    <div className='col'>\n      <Wrapper>\n        <Switch>\n          <Route exact={true} path='/' component={Home} />\n          <Route path='/explore/:query/:index' component={Editor} />\n        </Switch>\n      </Wrapper>\n    </div>\n  </div>\n)\n\nexport default routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport annyang from 'annyang'\n\nimport store from './configs/store'\nimport routes from './configs/routes'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nexport const socket = io()\n\nannyang.setLanguage('en-IN')\nannyang.start()\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      {routes()}\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/monk.188e60c7.png\";"],"sourceRoot":""}