{"version":3,"sources":["redux/modules/test.js","redux/utils/reduxUtils.js","redux/modules/home/home.js","redux/modules/wrapper/wrapper.js","configs/store.js","screens/components/input/input.js","screens/home/Home.jsx","screens/Editor/LintErrorTemplate.js","screens/Editor/Editor.jsx","Wrapper.js","configs/routes.jsx","serviceWorker.js","index.js","screens/home/images/monk.png"],"names":["initialState","isFetching","isAuthed","error","test","state","action","options","GET_USER","GET_USER_FAILURE","GET_USER_SUCCESS","userInfo","response","type","makeActionByType","actionName","success","failure","defaultState","makeReducer","additionalActions","shouldMergeDefaultStates","mergedState","moreActions","home","query","SET_QUERY_RESULTS","files","setQueryResults","wrapper","SET_NOTIFICATIONS_CONTENT","content","TOGGLE_CONTEXT","showContext","title","setNotificationContent","toggleContext","newState","resetContext","store","dispatch","createStore","combineReducers","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","func","Input","event","className","returnData","placeholder","useState","inputValue","setInputValue","shouldShowButton","toggleButton","isProcessing","setProcessing","useEffect","value","disabled","onChange","evt","target","onKeyDown","keyCode","onClick","formatFileNames","push","file","filteredFiles","pathname","setSelectedFile","isDirectory","fileExtensionElementMap","js","class","css","tpl","html","jsx","default","directory","map","fileName","index","iconElement","extension","slice","lastIndexOf","handleClick","renderFile","App","setFiles","message","setMessage","useDispatch","location","useLocation","history","useHistory","commands","annyang","trigger","socket","emit","operation","split","fileIndex","path","on","data","length","console","log","filteredDirs","listFor","dirName","exceptions","addCommands","setupAnnyang","src","monk","alt","LintErrorTemplate","line","column","ruleId","toUpperCase","handleManualCodeSave","setwasCodeEdited","Editor","renderedContent","setRenderedContent","wasCodeEdited","cursorPosition","setCursorPosition","useSelector","useParams","selectedFilePath","Ace","AceEditor","name","changeType","active","meta","libraryName","fileContent","parsedLineNumber","parseInt","operationOn","suggestions","imortItem","errors","errorCount","warningCount","allErrors","warnings","key","template","setupPage","Prism","highlightAll","removeCommands","tabSize","width","fontSize","theme","mode","height","cursorStart","editorProps","$blockScrolling","code","handleEditorChange","handleInputChange","customEvent","restOptions","Wrapper","children","go","Object","keys","SetupAnnyang","notficationHeader","notficationOptions","optionContentTemplate","item","handleOptionClick","routes","annyangRef","exact","component","Home","Boolean","hostname","match","io","setLanguage","start","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d47188ee.chunk.js","sourcesContent":["// import { get } from '$UTILS/requestHandler'\n// import errorTypeDetailMap from '$CONFIG/errorTypeDetailMap'\n\nexport const GET_USER = 'GET_USER'\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE'\n\nexport function getUser() {\n  return {\n    type : GET_USER\n  }\n}\n\nexport function getUserFailure(error = '') {\n  return {\n    type  : GET_USER_FAILURE,\n    error\n  }\n}\n\nexport function getUserSuccess(response) {\n  return {\n    type : GET_USER_SUCCESS,\n    response\n  }\n}\n\n// Async Action Creators Starts\nexport function fetchUser() {\n  return async (dispatch) => {\n    dispatch(getUser())\n\n    try {\n      // const response = await get({\n      //   path    : 'some/path',\n      //   payload : {},\n      //   dispatch\n      // })\n\n      const body = await fetch('https://backendapi.turing.com/departments')\n      const response = await body.json()\n\n      dispatch(getUserSuccess(response))\n    } catch (error){\n      dispatch(getUserFailure(error.message))\n\n      throw error.message\n    }\n  }\n}\n// Async Action Creators Ends\n\nexport const initialState = {\n  isFetching : false,\n  isAuthed   : false,\n  error      : ''\n}\n\nexport default function test(state = initialState, action) {\n  const options = {\n    GET_USER : () => ({\n      ...state,\n      isFetching : true\n    }),\n    GET_USER_FAILURE : () => ({\n      ...state,\n      isFetching : false,\n      error      : action.error\n    }),\n    GET_USER_SUCCESS : () => ({\n      ...state,\n      isFetching : false,\n      error      : '',\n      userInfo   : action.response\n    })\n  }\n\n  return action.type && options[action.type] ? options[action.type]() : state\n}\n\n","// import errorTypeDetailMap from '$CONFIG/errorTypeDetailMap'\nconst errorTypeDetailMap = {}\n\nfunction makeActionByType(actionName, type) {\n  const typeValueMap = {\n    success : '_SUCCESS',\n    failure : '_FAILURE'\n  }\n\n  return {\n    type : `${actionName}${typeValueMap[type]}`\n  }\n}\n\nexport function makeActions(actionName) {\n  return {\n    defaultAction(options = {}) {\n      return {\n        type : actionName,\n        ...options\n      }\n    },\n    successAction(response) {\n      return {\n        ...makeActionByType(actionName, 'success'),\n        response\n      }\n    },\n    failureAction(error = errorTypeDetailMap.generic) {\n      return {\n        ...makeActionByType(actionName, 'failure'),\n        error\n      }\n    }\n  }\n}\n\nconst defaultState = {\n  isFetching : true,\n  error      : ''\n}\n\nexport function makeReducer({\n  actionName,\n  additionalActions,\n  initialState = defaultState,\n  shouldMergeDefaultStates = false\n}) {\n  const mergedState = shouldMergeDefaultStates \n    ? {\n      ...defaultState,\n      ...initialState\n    } : initialState\n\n  return function (state = mergedState, action) {\n    const moreActions = additionalActions ? additionalActions(state, action) : {}\n    const options = {\n      [actionName] : () => ({\n        ...state,\n        isFetching : true\n      }),\n      [makeActionByType(actionName, 'failure').type] : () => ({\n        ...state,\n        isFetching : false,\n        error      : action.error\n      }),\n      [makeActionByType(actionName, 'success').type] : () => ({\n        ...state,\n        error      : '',\n        isFetching : false,\n        response   : action.response\n      }),\n      ...moreActions\n    }\n\n    return action.type && options[action.type] ? options[action.type]() : state\n  }\n}\n\n","import { makeReducer } from '../../utils/reduxUtils'\n\nconst home = makeReducer({\n  actionName : 'file',\n  shouldMergeDefaultStates : true,\n  initialState : {\n    query : ''\n  },\n  additionalActions(state, action) {\n    return {\n      SET_QUERY_RESULTS : () => ({\n        ...state,\n        files : action.files\n      })\n    }\n  }\n})\n\nconst SET_QUERY_RESULTS = 'SET_QUERY_RESULTS'\n\nexport function setQueryResults (files = '') {\n  return {\n    type : SET_QUERY_RESULTS,\n    files\n  }\n}\n\nexport default home\n\n","import { makeReducer } from '../../utils/reduxUtils'\nimport store from '../../../configs/store'\n\nconst wrapper = makeReducer({\n  shouldMergeDefaultStates : true,\n  actionName               : 'NOTIFICATION_CONTENT',\n  additionalActions(state, action) {\n    return {\n      SET_NOTIFICATIONS_CONTENT : () => ({\n        ...state,\n        content: action.content\n      }),\n      TOGGLE_CONTEXT : () => ({\n        ...state,\n        showContext : action.state || !state.showContext\n      })\n    }\n  },\n  initialState : {\n    showContext : false,\n    content: {\n      title   : '',\n      options : []\n    }\n  }\n})\n\nconst SET_NOTIFICATIONS_CONTENT = 'SET_NOTIFICATIONS_CONTENT'\nconst TOGGLE_CONTEXT = 'TOGGLE_CONTEXT'\n\nexport function setNotificationContent (content = {}) {\n  return {\n    type : SET_NOTIFICATIONS_CONTENT,\n    content\n  }\n}\n\nexport function toggleContext(newState) {\n  return {\n    type  : TOGGLE_CONTEXT,\n    state : newState\n  }\n}\n\nexport function resetContext() {\n  store.dispatch(setNotificationContent())\n  store.dispatch(toggleContext(false))\n}\n\nexport default wrapper\n","import thunk from 'redux-thunk'\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose\n} from 'redux'\nimport * as reducers from '../redux'\n\nconst store   = createStore(\n  combineReducers({\n    ...reducers\n  }),\n  compose(applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (func) => func)\n)\n\nexport default store\n\n","import React, { useState, useEffect } from 'react'\nimport './styles.css'\n\nfunction Input({\n  event,\n  className = '',\n  returnData = {},\n  placeholder = 'Enter value'\n}) {\n  const [inputValue, setInputValue] = useState('')\n  const [shouldShowButton, toggleButton] = useState(false)\n  const [isProcessing, setProcessing] = useState(false)\n\n  useEffect(() => toggleButton(inputValue !== ''), [inputValue])\n\n  return (\n    <div className='input-wrapper'>\n      <input\n        type=\"text\"\n        value={inputValue}\n        disabled={isProcessing}\n        placeholder={placeholder}\n        className={`input ${className}`}\n        onChange={(evt) => {\n          setInputValue(evt.target.value)\n        }}\n        onKeyDown={(evt) => {\n          const { keyCode, target : { value } } = evt\n\n          if (value && keyCode === 13) {\n            event && event({ value, ...returnData })\n            setProcessing(true)\n          }\n        }}\n      />\n      <button\n        className={`input-button ${shouldShowButton && !isProcessing && 'visible'}`}\n        onClick={() => {\n          event && event({ value : inputValue, ...returnData })\n          setProcessing(true)\n        }}\n      >ok</button>\n    </div>\n  )\n}\n\nexport default Input\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch }                from 'react-redux';\nimport { useLocation, useHistory }    from 'react-router-dom'\nimport annyang                        from 'annyang'\n\nimport { socket } from '../../index'\nimport { setQueryResults } from '../../redux/modules/home/home'\nimport Input from '../components/input/input'\n\n// react-simple-code-editor Deps\n// import Editor                         from 'react-simple-code-editor';\n// import { highlight, languages }       from 'prismjs/components/prism-core'\n\nimport monk from './images/monk.png'\nimport './App.css';\n\n// const socket = io();\nfunction renderFile({ index, file, push }) {\n  push(`/explore/${file}/${index}`)\n}\n\nfunction formatFileNames({ \n  push,\n  file,\n  event,\n  pathname,\n  filteredFiles, \n  setSelectedFile,\n  isDirectory = false\n}) {\n  const fileExtensionElementMap = {\n    js        : <i class='fab fa-js-square'></i>,\n    css       : <i class='fab fa-css3-alt'></i>,\n    tpl       : <i class='fab fa-html5'></i>,\n    html      : <i class='fab fa-html5'></i>,\n    jsx       : <i class='fab fa-react'></i>,\n    default   : <i class='fas fa-code'></i>,\n    directory : <i class=\"fas fa-folder-open\"></i>\n  }\n  return filteredFiles.map((fileName, index) => {\n    const extension = fileName.slice(fileName.lastIndexOf('.') + 1)\n    let iconElement\n\n    if (!isDirectory) {\n      iconElement = fileExtensionElementMap[extension] || fileExtensionElementMap.default\n    } else {\n      iconElement = fileExtensionElementMap.directory\n    }\n\n    const handleClick = !isDirectory ? () => renderFile({ index, file, push }) : null\n\n    return (\n      <p onClick={handleClick} className='file-item'>\n        {iconElement} <span className='file-name'>{fileName}</span>\n        {isDirectory && <Input placeholder='Directory Name' returnData={{fileName}} event={event} />}\n      </p>\n    )\n  })\n}\n\nfunction setupAnnyang({\n  history,\n  location,\n  dispatch,\n  setFiles,\n  setMessage,\n  setSelectedFile\n}) {\n  const commands = {\n    'hello' : () => {\n      annyang.trigger('go home')\n\n      setMessage('Hey Man! Let\\'s do this thing!');\n      setFiles([])\n    },\n\n    'search for file *file' : (file) => {\n      annyang.trigger('go home')\n      setMessage(`open ${file}`)\n\n      socket.emit('openFile', {\n        operation : 'open',\n        file : file.split(' ')\n      });\n    },\n\n    'select :fileIndex file' : (fileIndex) => {\n      setMessage(`Selected ${fileIndex}`)\n\n      // socket.emit('openFile', {\n      //   operation : 'open',\n      //   file : `${file.replace(/\\s/g, '')}`.toLowerCase()\n      // })\n    },\n\n    'make new directory at *path' : (path) => {\n      socket.emit('make directory', {\n        path      : path.split(' '),\n        operation : 'list directory'\n      })\n    },\n\n    'make new file at *path' : (path) => {\n      socket.emit('make file', {\n        path      : path.split(' '),\n        operation : 'list directory'\n      })\n    }\n  }\n\n  socket.on('openFile', (data = {}) => {\n    const { filteredFiles, file } = data\n    const { push } = history\n    const { pathname } = location\n\n    if (filteredFiles && filteredFiles.length) {\n      setMessage(`I found ${filteredFiles.length} files:`)\n      setFiles(formatFileNames({ filteredFiles, setSelectedFile, push, pathname, file }))\n      dispatch(setQueryResults(filteredFiles))\n    } else {\n      setMessage(`I couldn't find any file with this name: ${file}.`)\n      setFiles([])\n    }\n\n    console.log(data)\n  })\n\n  socket.on('list directory', (data = {}) => {\n    annyang.trigger('go home')\n\n    const { filteredDirs, path, listFor } = data\n    const { push } = history\n    const { pathname } = location\n\n    if (filteredDirs && filteredDirs.length) {\n      setMessage(`I found ${filteredDirs.length} directories:`)\n      setFiles(formatFileNames({\n        push,\n        pathname,\n        setSelectedFile,\n        file          : path,\n        isDirectory   : true,\n        filteredFiles : filteredDirs,\n        event         : ({ value, fileName }) => {\n          socket.emit(`make ${listFor}`, {\n            operation : `create ${listFor}`,\n            dirName   : `${fileName}${value}`\n          });\n          setMessage(`Making new ${listFor} '${value}'...`)\n        }\n      }))\n\n      dispatch(setQueryResults(filteredDirs))\n    } else {\n      setMessage(`I couldn't find any directories with this name: ${path}.`)\n      setFiles([])\n    }\n  })\n\n  socket.on('create directory status', ({ exceptions, dirName }) => {\n    if (!exceptions) {\n      setMessage(`Created new directory at ${dirName}.`)\n    } else {\n      setMessage(`Error occured: ${exceptions}`)\n    }\n\n    setFiles([])\n  })\n\n  annyang.addCommands(commands)\n}\n\nfunction App() {\n  const [ files, setFiles ] = useState([])\n  const [ message, setMessage ] = useState('Ask something to Rudra...')\n\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => setupAnnyang({\n    setMessage,\n    setFiles,\n    dispatch,\n    location,\n    history\n  }), [])\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img className='monk App-logo' src={monk} alt='logo' />\n        <p>\n          {message}\n          <div className='t-left'>\n            {files.length > 0 && files}\n            <div className='todos'>\n              <p>TODO:</p>\n              <p>- Add Code to Function Component</p>\n              <p>- Add Code to make Class Component</p>\n              <p>- Add Code to add hooks: useEffect, useState, useSelector</p>\n            </div>\n          </div>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React  from 'react';\n\nexport default function LintErrorTemplate({\n  line,\n  type,\n  column,\n  ruleId,\n  message,\n}) {\n  return (\n    <div className={`lint-${type}`}>{`${type.toUpperCase()}: ${message} @ ${line}:${column}`}</div>\n  )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector }   from 'react-redux';\nimport Prism                          from 'prismjs'\nimport { useParams }                  from 'react-router-dom'\nimport annyang                        from 'annyang'\n\nimport { socket } from '../../index'\nimport LintErrorTemplate from './LintErrorTemplate'\n\nimport {\n  setNotificationContent,\n  toggleContext,\n  resetContext\n} from '../../redux/modules/wrapper/wrapper'\n\n// react-ace deps\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nimport monk from '../home/images/monk.png'\nimport './styles.css'\n\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport '@fortawesome/fontawesome-free/css/solid.min.css'\n\nfunction setupPage({\n  dispatch,\n  selectedFilePath,\n  setCursorPosition,\n  setRenderedContent\n}){\n  window.Ace = AceEditor\n  const commands = {\n    'add variable at line number :line' : (line, name) => {\n      socket.emit('addNewItem', {\n        line,\n        name,\n        type : 'variable',\n        file : selectedFilePath\n      })\n    },\n\n    'add function at line number :line' : (line, name) => {\n      socket.emit('addNewItem', {\n        line,\n        name,\n        type : 'function',\n        file : selectedFilePath\n      })\n    },\n\n    'add react class component' : (name) => {\n      socket.emit('addNewItem', {\n        name,\n        changeType : 'file',\n        type       : 'reactClassComponent',\n        file       : selectedFilePath\n      })\n    },\n\n    'add react function component' : () => {\n      dispatch(toggleContext(true))\n      dispatch(setNotificationContent({\n        title   : 'Enter state hook variable name',\n        options : [],\n        event   : ({ active = 'temp', options }) => {\n          socket.emit('addNewItem', {\n            changeType : 'file',\n            type       : 'reactFunctionComponent',\n            file       : selectedFilePath,\n            meta       : {\n              name : active\n            }\n          })\n\n          resetContext()\n        }\n      }))\n    },\n\n    'add react function component at line number :line' : (line) => {\n      socket.emit('addNewItem', {\n        line,\n        changeType : 'line',\n        type       : 'reactFunctionComponent',\n        file       : selectedFilePath\n      })\n    },\n\n    'add state hook at line number *line' : (line) => {\n      dispatch(toggleContext(true))\n      dispatch(setNotificationContent({\n        title   : 'Enter state hook variable name',\n        options : [],\n        event   : ({ active = 'temp', options }) => {\n          socket.emit('addNewItem', {\n            line,\n            type : 'reactStateHook',\n            file : selectedFilePath,\n            meta : {\n              name : active\n            }\n          })\n\n          resetContext()\n        }\n      }))\n    },\n\n    'add use effect at line number *line' : (line) => {\n      socket.emit('addNewItem', {\n        line,\n        type : 'reactUseEffectHook',\n        file : selectedFilePath\n      })\n    },\n\n    'make reducer function' : () => {\n      dispatch(toggleContext(true))\n      dispatch(setNotificationContent({\n        options    : [],\n        changeType : 'file',\n        title      : 'Enter Reducer Function Name',\n        event      : ({ active = 'temp', options }) => {\n          socket.emit('addNewItem', {\n            line : 1,\n            type : 'reducerFunction',\n            file : selectedFilePath,\n            meta : { name : active }\n          })\n\n          resetContext()\n        }\n      }))\n    },\n\n    'make actions at line number :line' : (line) => {\n      dispatch(toggleContext(true))\n      dispatch(setNotificationContent({\n        options : [],\n        title   : 'Enter Reducer Function Name',\n        event   : ({ active = 'temp', options }) => {\n          socket.emit('addNewItem', {\n            line,\n            type : 'reduxActions',\n            file : selectedFilePath,\n            meta : { name : active }\n          })\n\n          resetContext()\n        }\n      }))\n    },\n\n    'import library *libraryName' : (libraryName) => {\n      socket.emit('import operation', {\n        name      : libraryName,\n        file      : selectedFilePath,\n        operation : 'library import'\n      })\n    },\n\n    'import file *fileName' : (fileName) => {\n      socket.emit('import operation', {\n        name      : fileName,\n        file      : selectedFilePath,\n        operation : 'file import'\n      })\n    },\n    \n    'import file from *fileName' : (fileName) => {\n      socket.emit('import operation', {\n        name      : fileName,\n        file      : selectedFilePath,\n        operation : 'file import'\n      })\n    }\n  }\n\n  socket.on('renderFile', (data = {}) => {\n    const { fileContent, cursorPosition = 1 } = data\n\n    setCursorPosition(cursorPosition)\n    setRenderedContent(fileContent)\n  })\n\n  socket.on('add new content', (data = {}) => {\n    const { fileContent, line = 1 } = data\n    const parsedLineNumber = parseInt(line, 10)\n\n    setRenderedContent(fileContent)\n    setCursorPosition(parsedLineNumber)\n  })\n\n  socket.on('import operation', (data = {}) => {\n    const {\n      operation,\n      query,\n      operationOn,\n      suggestions : options\n    } = data\n\n    if (operation && operation === 'show suggestions') {\n      const title = options.length\n        ? 'Choose one:'\n        : `Not found.`\n\n      console.log('*******************')\n      console.log(options)\n      console.log('*******************')\n\n      dispatch(setNotificationContent({\n        title,\n        options,\n        event   : ({ active, options }) => {\n          socket.emit('import operation', {\n            ...query,\n            imortItem : active,\n            operation : `${operationOn} import confirmation`\n          })\n        }\n      }))\n      dispatch(toggleContext())\n    }\n  })\n\n  socket.on('show context', ({ type, data } = {}) => {\n    const {\n      meta,\n      errors\n    } = data\n    const title = `Lint: ${meta.errorCount} Errors, ${meta.warningCount} Warnings`\n    const allErrors = [...errors.errors, ...errors.warnings].map(error => {\n      error.key = error.message\n\n      return error\n    })\n\n    dispatch(setNotificationContent({\n      type,\n      title,\n      options  : allErrors,\n      template : LintErrorTemplate,\n      event    : ({ active, options }) => console.log(active, options)\n    }))\n    dispatch(toggleContext(true))\n  })\n\n  annyang.addCommands(commands)\n}\n\nfunction handleEditorChange({ setwasCodeEdited, code, setRenderedContent }) {\n  setRenderedContent(code)\n  setwasCodeEdited(true)\n}\n\nfunction handleManualCodeSave(file, content, setwasCodeEdited) {\n  socket.emit('save content', {\n    file,\n    content,\n  })\n\n  setwasCodeEdited(false)\n}\n\nexport default function Editor() {\n  const [ renderedContent, setRenderedContent ] = useState('')\n  const [ wasCodeEdited, setwasCodeEdited ] = useState(false)\n  const [ cursorPosition, setCursorPosition ] = useState(1)\n  const { home } = useSelector(({ home, wrapper }) => {\n    return {\n      home,\n      wrapper\n    }\n  })\n  const { files } = home\n  const { index } = useParams()\n  const dispatch = useDispatch()\n\n  const selectedFilePath = files[index]\n\n  useEffect(() => setupPage({\n    dispatch,\n    selectedFilePath,\n    setCursorPosition,\n    setRenderedContent\n  }), [])\n\n  useEffect(() => socket.emit('renderFile', {\n    operation : 'render',\n    fileName : selectedFilePath\n  }), [])\n\n  useEffect(() => () => {\n    Prism.highlightAll()\n    annyang.removeCommands(['save contents'])\n    annyang.addCommands({\n      'save contents' : () => handleManualCodeSave(selectedFilePath, renderedContent, setwasCodeEdited)\n    })\n  }, [renderedContent, selectedFilePath])\n\n  return (\n    <div className='editor-cont'>\n      <header className='editor-header'>\n        <img className='small-monk' src={monk} alt='logo' />\n        <h1>Rudra</h1>\n        {\n          wasCodeEdited && (\n            <div\n              className='editor-save'\n              onClick={() => handleManualCodeSave(selectedFilePath, renderedContent, setwasCodeEdited)}\n            >Save</div>\n          )\n        }\n      </header>\n      <div className='editor'>\n        {\n          renderedContent && (\n            <AceEditor\n              tabSize={2}\n              width='auto'\n              fontSize={14}\n              theme='monokai'\n              mode='javascript'\n              name={selectedFilePath}\n              value={renderedContent}\n              height='calc(100vh - 62px)'\n              cursorStart={cursorPosition}\n              editorProps={{ $blockScrolling: true }}\n              onChange={code => handleEditorChange({ code, setRenderedContent, setwasCodeEdited })}\n            />\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect }        from 'react';\nimport { useSelector }             from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport annyang                     from 'annyang'\n\nimport { resetContext } from './redux/modules/wrapper/wrapper'\nimport Input            from './screens/components/input/input'\n\nfunction SetupAnnyang({ history, location }) {\n  const commands = {\n    'go home' : () => {\n      debugger\n      if (location.pathname !== '/'){\n        history.go('/');\n      }\n    },\n\n    'show context' : () => {\n      if (location.pathname !== '/'){\n        history.go('/');\n      }\n    }\n  }\n\n  annyang.removeCommands(Object.keys(commands))\n  annyang.addCommands(commands)\n}\n\nfunction handleOptionClick({ customEvent, ...restOptions }) {\n  resetContext()\n  return customEvent && customEvent(restOptions)\n}\n\nfunction handleInputChange({ value, customEvent, ...restOptions }) {\n  return customEvent && customEvent({\n    ...restOptions,\n    active : value\n  })\n}\n\nfunction Wrapper({ children }) {\n  const location = useLocation()\n  const history = useHistory()\n  // const [showContext, toggleContext] = useState(true)\n  // const [contextContent, setContext] = useState({\n  //   heading: 'What is your problem?',\n  //   listItems : ['itme 1', 'itme 2', 'itme 3', 'itme 4']\n  // })\n\n  useEffect(() => SetupAnnyang({ history, location }), [location])\n\n  const { content, showContext } = useSelector(state => state.wrapper)\n  const {\n    event    : customEvent,\n    title    : notficationHeader,\n    options  : notficationOptions,\n    template : optionContentTemplate\n  } = content\n\n  return (\n    <div>\n      {children}\n      {\n        showContext && (\n          <div className='context-menu'>\n            <h2 className='context-title'>{notficationHeader}</h2>\n            <ul className='context-options'>\n              {notficationOptions && notficationOptions.map && notficationOptions.map(item => (\n                <li\n                  key={item.key || item}\n                  onClick={() => handleOptionClick({\n                    customEvent,\n                    active  : item,\n                    options : notficationOptions\n                  })}\n                >\n                  {optionContentTemplate ? optionContentTemplate(item) : item}\n                </li>\n              ))}\n              {notficationOptions.length === 0 && (\n                <li>Enter name in the input below:</li>\n              )}\n              <li>\n                <Input\n                  returnData={{\n                    customEvent,\n                    active  : '',\n                    options : notficationOptions,\n                  }}\n                  event={handleInputChange}\n                  placeholder='Enter custom value?'\n                  className='context-input'\n                />\n              </li>\n            </ul>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default Wrapper;\n\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\n// import Test from '$COMPONENTS/test'\n// import Test2 from '$COMPONENTS/Test2'\n\nimport Home from '../screens/home/Home'\nimport Editor from '../screens/Editor/Editor'\nimport Wrapper from '../Wrapper'\n\n// import {\n//   Home,\n//   RepoDetails\n// } from '$CONTAINERS'\n\nconst routes = (annyangRef) => (\n  <div className='app grid'>\n    <div className='col'>\n      {annyangRef ? (\n        <Wrapper>\n          <Switch>\n            <Route exact={true} path='/' component={Home} />\n            <Route path='/explore/:query/:index' component={Editor} />\n          </Switch>\n        </Wrapper>\n      )\n      : (<div>Speech Synthesis is not supported!</div>)}\n    </div>\n  </div>\n)\n\nexport default routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport annyang from 'annyang'\n\nimport store from './configs/store'\nimport routes from './configs/routes'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nexport const socket = io()\n\nif (annyang) {\n  annyang.setLanguage('en-IN')\n  annyang.start()\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      {routes(annyang)}\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/monk.188e60c7.png\";"],"sourceRoot":""}